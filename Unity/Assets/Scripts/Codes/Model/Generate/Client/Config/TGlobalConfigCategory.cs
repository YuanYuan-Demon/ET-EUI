
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using ET.Luban;


namespace ET.Client
{
[Config]
public partial class TGlobalConfigCategory: ConfigSingleton<TGlobalConfigCategory>
{

     private readonly TGlobalConfig _data;

    public TGlobalConfigCategory(ByteBuf _buf)
    {
        int n = _buf.ReadSize();
        if (n != 1) throw new SerializationException("table mode=one, but size != 1");
        _data = TGlobalConfig.DeserializeTGlobalConfig(_buf);
        PostInit();
    }


    /// <summary>
    /// 背包容量上限
    /// </summary>
     public int BagCapacityLimit => _data.BagCapacityLimit;
    /// <summary>
    /// 背包起始容量
    /// </summary>
     public int BagCapacityStart => _data.BagCapacityStart;
    /// <summary>
    /// RouterManager地址
    /// </summary>
     public string RouterHttpHost => _data.RouterHttpHost;
    /// <summary>
    /// RouterManager端口
    /// </summary>
     public int RouterHttpPort => _data.RouterHttpPort;
    /// <summary>
    /// 账号服务器地址
    /// </summary>
     public string AccountHost => _data.AccountHost;
    /// <summary>
    /// 账号服务器端口
    /// </summary>
     public int AccountPort => _data.AccountPort;
    /// <summary>
    /// 连接超时时间
    /// </summary>
     public int SessionTimeoutTime => _data.SessionTimeoutTime;
    /// <summary>
    /// 出生位置
    /// </summary>
     public MyFloat3 BornPosition => _data.BornPosition;

    public override void Resolve(Dictionary<Type, IConfigSingleton> tables)
    {
        _data.Resolve(tables);
        PostResolve();
    }
    public override string ConfigName() => nameof (TGlobalConfig);
}
}

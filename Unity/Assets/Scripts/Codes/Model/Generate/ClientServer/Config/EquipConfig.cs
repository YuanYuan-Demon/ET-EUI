//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using ET.Luban;

namespace ET
{
    public sealed partial class EquipConfig: Luban.BeanBase
    {
        public const int __ID__ = -233858190;

        public EquipConfig(ByteBuf _buf)
        {
            Id = _buf.ReadInt();
            Name = _buf.ReadString();
            EquipPosition = (EquipPosition)_buf.ReadInt();
            Role = (RoleClass)_buf.ReadInt();
            {
                int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);
                Attributes = new System.Collections.Generic.Dictionary<NumericType, long>(n0 * 3 / 2);
                for (var i0 = 0; i0 < n0; i0++)
                {
                    NumericType _k0;
                    _k0 = (NumericType)_buf.ReadInt();
                    long _v0;
                    _v0 = _buf.ReadLong();
                    Attributes.Add(_k0, _v0);
                }
            }
            EntryRandomId = _buf.ReadInt();
            PostInit();
        }

        /// <summary>
        /// Id
        /// </summary>
        public int Id { get; }

        /// <summary>
        /// 名称
        /// </summary>
        public string Name { get; }

        /// <summary>
        /// 位置
        /// </summary>
        public EquipPosition EquipPosition { get; }

        /// <summary>
        /// 职业
        /// </summary>
        public RoleClass Role { get; }

        public System.Collections.Generic.Dictionary<NumericType, long> Attributes { get; }

        /// <summary>
        /// 词条随机Id
        /// </summary>
        public int EntryRandomId { get; }

        public static EquipConfig DeserializeEquipConfig(ByteBuf _buf)
        {
            return new EquipConfig(_buf);
        }

        public override int GetTypeId() => __ID__;

        public void Resolve(Dictionary<Type, IConfigSingleton> _tables)
        {
            PostResolve();
        }

        public override string ToString()
        {
            return "{ "
                    + "id:" + Id + ","
                    + "name:" + Name + ","
                    + "equipPosition:" + EquipPosition + ","
                    + "role:" + Role + ","
                    + "attributes:" + Luban.StringUtil.CollectionToString(Attributes) + ","
                    + "entryRandomId:" + EntryRandomId + ","
                    + "}";
        }
    }
}